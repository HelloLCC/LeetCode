/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        if (l1 == null) return l2;
        if (l2 == null) return l1;
        int carry = 0;
        ListNode head = new ListNode(-1);
        ListNode tail = head;
        while (l1 != null || l2 != null) {
            if (l1 != null) {
                if (l2 != null) {
                    int sum = l1.val + l2.val + carry;
                    tail.next = new ListNode(sum % 10);
                    tail = tail.next;
                    carry = sum / 10;
                    l1 = l1.next;
                    l2 = l2.next;
                } else {
                    int sum = l1.val + carry;
                    tail.next = new ListNode(sum % 10);
                    tail = tail.next;
                    l1 = l1.next;
                    carry = sum / 10;
                }
            } else {
                int sum = l2.val + carry;
                tail.next = new ListNode(sum % 10);
                tail = tail.next;
                l2 = l2.next;
                carry = sum / 10;
            }
        }
        if (carry != 0) {
            tail.next = new ListNode(carry);
        }
        return head.next;
    }
}
