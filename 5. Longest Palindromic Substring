class Solution {
    public String longestPalindrome(String s) {
        if (s == null || s.length() == 1) return s;
        int[][] dp = new int[s.length()][s.length()];
        int max = 0, start = 0, end = 0;
        for (int i = 0; i < s.length(); i++) {
            for (int j = 0; j <= i; j++) {
                if (i == j) {
                    dp[i][j] = 1;
                } else if (i == (j + 1)) {
                    if (s.charAt(i) == s.charAt(j)) {
                        dp[i][j] = 1;
                    }
                } else {
                    if (s.charAt(i) == s.charAt(j)) {
                        if (dp[i - 1][j + 1] == 1) {
                            dp[i][j] = 1;
                        }
                    }
                }
                if (dp[i][j] == 1 && max <= (i - j + 1)) {
                    max = i - j + 1;
                    start = j;
                    end = i;
                }
            }
        }
        return s.substring(start, start + max);
    }
}
